{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","visiblePages","visibleItems","i","push","className","classNames","disabled","href","onClick","map","page","active","event","currentTarget","innerHTML","filter","item","items","from","to","numbers","n","getNumbers","App","useState","setPerPage","setCurrentPage","maxValue","length","firstItem","lastItem","currentInfo","id","value","onChange","target","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"oNASaA,EAA8B,SAAC,GAY1C,IALI,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,aAGIC,EAAQC,KAAKC,KAAKN,EAAQC,GAC1BM,EAAe,GACfC,EAAe,GAEZC,EAAI,EAAGA,GAAKL,EAAOK,GAAK,EAC/BF,EAAaG,KAAKD,GAGpB,IAAK,IAAIA,EAAI,EAAGA,GAAKR,EAASQ,GAAK,EACjCD,EAAaE,KAAKD,EAAIR,GAAWC,EAAc,IAGjD,OACE,qCACE,qBAAIS,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBX,IAHhB,SAME,mBACE,UAAQ,WACRS,UAAU,YACVG,KAAK,QACLC,QAAS,WACHb,EAAc,GAChBC,EAAaD,EAAc,IAG/B,gBAA+B,IAAhBA,EATjB,oBAcDK,EAAaS,KAAI,SAAAC,GAChB,OACE,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQhB,IAAgBe,IAH9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,SAACI,IACHA,EAAMC,cAAcC,YAAcnB,GAIvCC,GAAcgB,EAAMC,cAAcC,YATtC,SAYGJ,KAnBL,eAKeA,OAmBnB,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUX,IAAgBE,IAHhC,SAME,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACLC,QAAS,WACHb,EAAcE,GAChBD,EAAaD,EAAc,IAG/B,gBAAeA,IAAgBE,EATjC,uBAeJ,6BACGI,EAAac,QAAO,SAAAC,GAAI,OAAIA,GAAQvB,KAAOgB,KAAI,SAAAO,GAC9C,OACE,oBACE,UAAQ,OADV,wBAIWA,IAJX,eAEeA,aClGrBC,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQjB,KAAKkB,GAGf,OAAOD,EDDKE,CAAW,EAAG,IACzBb,KAAI,SAAAY,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAO9B,EAAP,KAAgB+B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO7B,EAAP,KAAoB+B,EAApB,KAcA,OACE,sBAAKtB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SAhBgB,WAClB,IAAMuB,EAAWV,EAAMW,OACjBC,EAAanC,GAAWC,EAAc,GAAK,EAC7CmC,EAAWpC,EAAUC,EAMzB,OAJImC,EAAWH,IACbG,EAAWH,GAGP,QAAN,OAAehC,EAAf,mBAAqCkC,EAArC,cAAoDC,EAApD,eAAmEb,EAAMW,OAAzE,KAQKG,KAGH,sBAAK3B,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR4B,GAAG,kBACHC,MAAOvC,EACPU,UAAU,eACV8B,SAAU,SAACtB,GACTa,GAAYb,EAAMuB,OAAOF,OACzBP,EAAe,IAPnB,UAUE,wBAAQO,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOG,QAAQ,kBAAkBhC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEX,MAAOwB,EAAMW,OACblC,QAASA,EACTC,YAAaA,EACbC,aAAc8B,QE1DtBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.184614d1.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = (\n  {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  },\n) => {\n  const pages = Math.ceil(total / perPage);\n  const visiblePages = [];\n  const visibleItems = [];\n\n  for (let i = 1; i <= pages; i += 1) {\n    visiblePages.push(i);\n  }\n\n  for (let i = 1; i <= perPage; i += 1) {\n    visibleItems.push(i + perPage * (currentPage - 1));\n  }\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === 1 },\n          )}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            onClick={() => {\n              if (currentPage > 1) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n            aria-disabled={currentPage === 1}\n          >\n            «\n          </a>\n        </li>\n        {visiblePages.map(page => {\n          return (\n            <li\n              className={classNames(\n                'page-item',\n                { active: currentPage === page },\n              )}\n              key={`page-${page}`}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${page}`}\n                onClick={(event) => {\n                  if (+event.currentTarget.innerHTML === currentPage) {\n                    return;\n                  }\n\n                  onPageChange(+event.currentTarget.innerHTML);\n                }}\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })}\n        <li\n          className={classNames(\n            'page-item',\n            { disabled: currentPage === pages },\n          )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            onClick={() => {\n              if (currentPage < pages) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n            aria-disabled={currentPage === pages}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {visibleItems.filter(item => item <= total).map(item => {\n          return (\n            <li\n              data-cy=\"item\"\n              key={`page-${item}`}\n            >\n              {`Item ${item}`}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const currentInfo = () => {\n    const maxValue = items.length;\n    const firstItem = (perPage * (currentPage - 1) + 1);\n    let lastItem = perPage * currentPage;\n\n    if (lastItem > maxValue) {\n      lastItem = maxValue;\n    }\n\n    return `Page ${currentPage} (items ${firstItem} - ${lastItem} of ${items.length})`;\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {currentInfo()}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            value={perPage}\n            className=\"form-control\"\n            onChange={(event) => {\n              setPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}